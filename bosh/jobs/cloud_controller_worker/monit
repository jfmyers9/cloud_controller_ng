<% if p("bpm.enabled") %>
<% (1..(p("cc.jobs.generic.number_of_workers"))).each do |index| %>
check process cloud_controller_worker_<%= index %>
  with pidfile /var/vcap/sys/run/bpm/cloud_controller_worker/worker_<%= index %>.pid
  start program "/var/vcap/packages/bpm/bin/bpm start cloud_controller_worker -p worker_<%= index %> -c /var/vcap/jobs/cloud_controller_worker/config/bpm/cloud_controller_worker.yml"
  stop program "/var/vcap/packages/bpm/bin/bpm stop cloud_controller_worker -p worker_<%= index %> -c /var/vcap/jobs/cloud_controller_worker/config/bpm/cloud_controller_worker.yml"
  group vcap
<% end %>
<% else %>
<% (1..(p("cc.jobs.generic.number_of_workers"))).each do |index| %>
check process cloud_controller_worker_<%= index %>
  with pidfile /var/vcap/sys/run/cloud_controller_worker/cloud_controller_worker_<%= index %>.pid
  start program "/var/vcap/jobs/cloud_controller_worker/bin/cloud_controller_worker_ctl start <%= index %>"
        as uid vcap and gid vcap
  stop program "/var/vcap/jobs/cloud_controller_worker/bin/cloud_controller_worker_ctl stop <%= index %>"
        as uid vcap and gid vcap
  group vcap

  if totalmem > <%= p("cc.thresholds.worker.alert_if_above_mb") %> Mb for 3 cycles then alert
  if totalmem > <%= p("cc.thresholds.worker.restart_if_consistently_above_mb") %> Mb for 15 cycles then restart
  if totalmem > <%= p("cc.thresholds.worker.restart_if_above_mb") %> Mb for 3 cycles then restart
<% end %>
<% end %>
